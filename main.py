import telebot
from telebot import types
import urllib.parse
import os
from dotenv import load_dotenv
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
SHEET_ID = os.getenv("GOOGLE_SHEET_ID")
CREDENTIALS_FILE = os.getenv("GOOGLE_CREDENTIALS")

bot = telebot.TeleBot(TOKEN)

# === Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ===
scope = ["https://spreadsheets.google.com/feeds", 'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).sheet1

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row('üìö –û –∫—É—Ä—Å–µ', 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å')
main_menu.row('üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', 'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞')

# === –ò–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å UTM-–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ ===
def get_payment_markup():
    card_payload = "card"
    crypto_payload = "crypto"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π (30$)", url=f"https://t.me/grind_unversity?start={card_payload}"),
        types.InlineKeyboardButton("ü™ô –û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–π (25$)", url=f"https://t.me/grind_unversity?start={crypto_payload}")
    )
    return markup

# === –û–ø—Ä–æ—Å–Ω–∏–∫ ===
def ask_user_info(chat_id):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    markup.row('‚úÖ –î–∞', '‚ùå –ù–µ—Ç')
    bot.send_message(chat_id, '–¢—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª –≤ —Å—Ñ–µ—Ä–µ –¥–∏–¥–∂–∏—Ç–∞–ª –∏–ª–∏ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—à—å?', reply_markup=markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ===
@bot.message_handler(commands=['start'])
def start(message):
    payload = message.text.split(" ", 1)[1] if len(message.text.split()) > 1 else None
    username = f"@{message.from_user.username}" if message.from_user.username else "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"

    # –ï—Å–ª–∏ –≤ start –ø–µ—Ä–µ–¥–∞–Ω —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
    if payload in ['card', 'crypto']:
        payment = "üí≥ –ö–∞—Ä—Ç–∞" if payload == "card" else "ü™ô –ö—Ä–∏–ø—Ç–∞"
        # –ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ username –∏ –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã
        records = sheet.get_all_records()
        for i, row in enumerate(records, start=2):  # –Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–æ–∫–∏
            if row['Username'] == username:
                sheet.update_cell(i, 5, payment)
                bot.send_message(message.chat.id, f"‚úÖ –°–ø–∞—Å–∏–±–æ! –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–ª —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã: {payment}")
                return

    # –û–±—ã—á–Ω—ã–π —Å—Ç–∞—Ä—Ç
    bot.send_message(
        message.chat.id,
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Grind University ‚ö°Ô∏è\n–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –ø—É—Ç—å –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∫—É.',
        reply_markup=main_menu
    )
    ask_user_info(message.chat.id)

# === –¢–µ–∫—Å—Ç—ã ===
@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == 'üìö –û –∫—É—Ä—Å–µ':
        try:
            with open('Frame 10.jpg', 'rb') as photo:
                bot.send_photo(
                    message.chat.id,
                    photo,
                    caption='üì¶ –í –∫—É—Ä—Å–µ: 16+ –º–æ–¥—É–ª–µ–π –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É, YouTube, Telegram, SEO –∏ –º–Ω–æ–≥–æ–º—É –¥—Ä—É–≥–æ–º—É.\n\nüéì –í—Å—ë —á—ë—Ç–∫–æ –ø–æ –ø–∞–ø–∫–∞–º: –≤–∏–¥–µ–æ, —Ç–∞–±–ª–∏—Ü—ã, –≥–∞–π–¥—ã –∏ —ç—Ñ–∏—Ä—ã.'
                )
        except FileNotFoundError:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: —Ñ–∞–π–ª 'Frame 10.jpg' –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    elif message.text == 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å':
        bot.send_message(
            message.chat.id,
            'üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞:\n‚ñ´Ô∏è 30$ ‚Äî –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫–∞—Ä—Ç–æ–π\n‚ñ´Ô∏è 25$ ‚Äî –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫—Ä–∏–ø—Ç–æ–π\n\nüìå –û–ø–ª–∞—Ç–∞ –Ω–∞–ø—Ä—è–º—É—é –≤ –±–æ—Ç–µ –∏–ª–∏ —á–µ—Ä–µ–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞.'
        )

    elif message.text == 'üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å':
        bot.send_message(
            message.chat.id,
            '–í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –Ω–∏–∂–µ, –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞:',
            reply_markup=get_payment_markup()
        )

    elif message.text == 'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        bot.send_message(
            message.chat.id,
            '‚ùì –ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ù–∞–ø–∏—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: @grind_unversity\nüìå –û–Ω –ø–æ–º–æ–∂–µ—Ç —Å –æ–ø–ª–∞—Ç–æ–π, –¥–æ—Å—Ç—É–ø–æ–º –∏ –±–æ–Ω—É—Å–∞–º–∏.'
        )

    elif message.text in ['‚úÖ –î–∞', '‚ùå –ù–µ—Ç']:
        answer = '–æ–ø—ã—Ç –µ—Å—Ç—å' if message.text == '‚úÖ –î–∞' else '–æ–ø—ã—Ç–∞ –Ω–µ—Ç'
        username = f"@{message.from_user.username}" if message.from_user.username else "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")

        row = [message.from_user.first_name, username, timestamp, answer, '‚Äî']
        sheet.append_row(row)

        bot.send_message(ADMIN_ID, f"üßæ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n–ò–º—è: {message.from_user.first_name}\n–Æ–∑–µ—Ä: {username}\n–û–ø—ã—Ç: {answer}")
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í—ã–±–∏—Ä–∞–π –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é üëá", reply_markup=main_menu)

    else:
        bot.send_message(
            message.chat.id,
            '–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É üòÖ\n–í—ã–±–µ—Ä–∏ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:',
            reply_markup=main_menu
        )

# === –ó–∞–ø—É—Å–∫ ===
print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
bot.infinity_polling()
