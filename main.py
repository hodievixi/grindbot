import telebot
from telebot import types
import urllib.parse
import os
from dotenv import load_dotenv
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from datetime import datetime

# === –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
load_dotenv()

TOKEN = os.getenv("BOT_TOKEN")
ADMIN_ID = int(os.getenv("ADMIN_ID"))
SHEET_ID = os.getenv("GOOGLE_SHEET_ID")
CREDENTIALS_FILE = os.getenv("GOOGLE_CREDENTIALS")

bot = telebot.TeleBot(TOKEN)

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Google Sheets ===
scope = ["https://spreadsheets.google.com/feeds", 'https://www.googleapis.com/auth/drive']
creds = ServiceAccountCredentials.from_json_keyfile_name(CREDENTIALS_FILE, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).sheet1

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
main_menu = types.ReplyKeyboardMarkup(resize_keyboard=True)
main_menu.row('üìö –û –∫—É—Ä—Å–µ', 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å')
main_menu.row('üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å', 'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞')

# === –ö–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã ===
def get_payment_markup():
    card_message = urllib.parse.quote("–•–æ—á—É –æ–ø–ª–∞—Ç–∏—Ç—å –∫—É—Ä—Å –∫–∞—Ä—Ç–æ–π")
    url = f"https://t.me/grind_unversity?start={card_message}"

    markup = types.InlineKeyboardMarkup()
    markup.add(
        types.InlineKeyboardButton("üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –∫–∞—Ä—Ç–æ–π (30$)", url=url),
        types.InlineKeyboardButton("ü™ô –û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–π (25$)", callback_data="pay_crypto")
    )
    return markup

# === /start ===
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(
        message.chat.id,
        '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Grind University ‚ö°Ô∏è\n–ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥–µ—à—å –ø—É—Ç—å –∫ —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ –∏ –∑–∞—Ä–∞–±–æ—Ç–∫—É.',
        reply_markup=main_menu
    )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@bot.message_handler(content_types=['text'])
def handle_message(message):
    if message.text == 'üìö –û –∫—É—Ä—Å–µ':
        try:
            with open('Frame 10.jpg', 'rb') as photo:
                bot.send_photo(
                    message.chat.id,
                    photo,
                    caption='üì¶ –í –∫—É—Ä—Å–µ: 16+ –º–æ–¥—É–ª–µ–π –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É, YouTube, Telegram, SEO –∏ –º–Ω–æ–≥–æ–º—É –¥—Ä—É–≥–æ–º—É.\n\nüéì –í—Å—ë —á—ë—Ç–∫–æ –ø–æ –ø–∞–ø–∫–∞–º: –≤–∏–¥–µ–æ, —Ç–∞–±–ª–∏—Ü—ã, –≥–∞–π–¥—ã –∏ —ç—Ñ–∏—Ä—ã.'
                )
        except FileNotFoundError:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –Ω–µ—Ç —Ñ–∞–π–ª–∞ Frame 10.jpg —Ä—è–¥–æ–º —Å –±–æ—Ç–æ–º.")

    elif message.text == 'üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å':
        bot.send_message(
            message.chat.id,
            'üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∫—É—Ä—Å–∞:\n‚ñ´Ô∏è 30$ ‚Äî –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫–∞—Ä—Ç–æ–π\n‚ñ´Ô∏è 25$ ‚Äî –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ –∫—Ä–∏–ø—Ç–æ–π\n\nüìå –ù–∞–∂–º–∏ ¬´–ö—É–ø–∏—Ç—å –∫—É—Ä—Å¬ª —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å —Å–ø–æ—Å–æ–±.'
        )

    elif message.text == 'üõí –ö—É–ø–∏—Ç—å –∫—É—Ä—Å':
        bot.send_message(
            message.chat.id,
            'üëá –í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã:',
            reply_markup=get_payment_markup()
        )

    elif message.text == 'üì® –ü–æ–¥–¥–µ—Ä–∂–∫–∞':
        bot.send_message(
            message.chat.id,
            '‚ùì –í–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É: @grind_unversity'
        )

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–ø–ª–∞—Ç–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–π" ===
@bot.callback_query_handler(func=lambda call: call.data == "pay_crypto")
def crypto_payment(call):
    username = f"@{call.from_user.username}" if call.from_user.username else "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"
    bot.send_message(
        call.message.chat.id,
        "ü™ô –û—Ç–ø—Ä–∞–≤—å **25 USDT (TRC-20)** –Ω–∞ –∫–æ—à–µ–ª–µ–∫:\n`TFfzrzShKw25V44BWHtewwXH12SLZvyDLg`\n\n–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.",
        parse_mode='Markdown',
        reply_markup=types.InlineKeyboardMarkup().add(
            types.InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="paid_crypto")
        )
    )

# === –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–æ–ø–ª–∞—Ç—ã ===
@bot.callback_query_handler(func=lambda call: call.data == "paid_crypto")
def confirm_crypto(call):
    username = f"@{call.from_user.username}" if call.from_user.username else "–Ω–µ—Ç —é–∑–µ—Ä–Ω–µ–π–º–∞"
    sheet.append_row([
        call.from_user.first_name,
        username,
        datetime.now().strftime("%d.%m.%Y %H:%M"),
        "‚Äî",
        "ü™ô –ö—Ä–∏–ø—Ç–∞"
    ])
    bot.send_message(call.message.chat.id, "‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–ª–∞—Ç—É! –î–æ—Å—Ç—É–ø –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –≤—Ä—É—á–Ω—É—é –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    bot.send_message(ADMIN_ID, f"üí∞ –û–ø–ª–∞—Ç–∞ –∫—Ä–∏–ø—Ç–æ–π –æ—Ç {username}")

# === –ó–∞–ø—É—Å–∫ ===
print("ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –°–ø–∏ —Å–ø–æ–∫–æ–π–Ω–æ, —Å–æ–ª–¥–∞—Ç —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ñ—Ä–æ–Ω—Ç–∞.")
bot.infinity_polling()
